package sketch:implementation;

interface hts {
    use wasi:i2c/i2c@0.1.0.{i2c, error-code};

    get-temperature: func(connection: i2c) -> result<string, error-code>;
    get-humidity: func(connection: i2c) -> result<string, error-code>;
}

interface lcd {
    use wasi:i2c/i2c@0.1.0.{i2c};
    use wasi:i2c/delay@0.1.0.{delay};

    write: func(connection: i2c, delay: delay, message: string);
}

world sensor {
    import wasi:i2c/i2c@0.1.0;

    export hts;
}

world screen {
    // As we need both i2c and delay we just include the imports
    include wasi:i2c/imports@0.1.0;

    export lcd;
}

/// This is a wrapper around devices to give a uniform interface to the host
world app {
    import hts;
    import lcd;

    export run: interface {
        use wasi:i2c/i2c@0.1.0.{i2c, error-code};
        use wasi:i2c/delay@0.1.0.{delay};

        run: func(connection: i2c, delay: delay, device: string) -> result<string, error-code>;
    }
}